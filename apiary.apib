FORMAT: 1A
HOST: http://opencorpora.org/

# OpenCorporaTest api

Описание методов API OpenCorpora для мобильного приложения

<!-- Предпочтительнее [/api/auth.php] -->
## Login [/api.php/?action={action}] 
### Authentication [POST]
Возвращает токен для авторизации

+ Parameters
    + action (required, string) ... Запрашиваемое действие


+ Response 200 (application/json)
    + Body
    
            {
                "api_version":"0.3",
                "answer":{
                  "token":458466977
                },
                "error":null
            }


## Types collection [/api/get_types.php/?uid={uid}&token={token}]
### Pull types [GET]
Возвращает доступные типы задач

+ Parameters
    + uid (required, string, `123456`) ... Идентификатор пользователя
    + token (required, string, `12343534`) ... Токен авторизации


+ Response 200 (application/json)
    + Body
        
            {
                 "items": [
                    {
                        "type_id": 1,
                        "name": "Прилагательное, мн.ч.: именительный / винительный",
                         "complexity": 10
                    },
                    {
                        "type_id": 2,
                        "name": "Существительное, ед. ч.: родительный / дательный / предложный",
                        "complexity": 5
                    }
                ]
            }

+ Response 401
        
## Task Collection [/api/get_tasks.php/?uid={uid}&type={type}&count={count}&token={token}] 
### Pull tasks [GET]
Возвращает задачи для выполнения
+ Parameters
    + uid (required, string, `2133`) ... Идентификатор пользователя
    + type (required, number, `1`) ... Тип задач
    + count (optional, number, `10`) ... Количество запрашиваевых задач
    + token (required, string, `12343534`) ... Токен авторизации

+ Response 200 (application/json)
    + Body 

            {
                "items": [
                    {
                        "id": 123,
                        "target": "одной",
                        "left_context": "Недопустимо , чтобы",
                        "right_context": "из подсистем являлась сама",
                        "has_instruction": true,
                        "choices": [
                            {
                                "1": "родительный"
                            },
                            {
                                "2": "дательный"
                            },
                            {
                                "3": "винительный"
                            },
                            {
                                "4": "предложный"
                            }
                        ]
                    }
                ]
            }
            


## Actual [/api/post_actual.php/?uid={uid}&token={token}]
### Actual [POST]
Актуализирует задачи в базе мобильного приложения с базой сервиса
+ Parameters 
    + uid (required, string, `123456`) ... Идентификатор пользователя
    + token (required, string, `12343534`) ... Токен авторизации

+ Request (application/json)
    + Body

            {
                "items": [
                    123,
                    145,
                    3456
                ]
            }

+ Response 200 (application/json)
    + Body 
        
            { 
                "items": [123]
            }


## Task Receiver [/api/post_tasks.php/?uid={uid}&token={token}]

### Push [POST]
Отправляет выполненные задачи
+ Parameters 
    + uid (required, string, `123456`) ... User identity
    + token (required, string, `12343534`) ... Auth token

+ Request (application/json)
    + Body
    
            {
                "items": [
                    {
                        "id": 1,
                        "answer": -1,
                        "seconds_before_answer": 23,
                        "is_left_context_showed": true,
                        "is_right_context_showed": false,
                        "commented": true,
                        "comment_text": "very difficult question"
                    },
                    {
                        "id": 2,
                        "answer": 2,
                        "seconds_before_answer": 2,
                        "is_left_context_showed": false,
                        "is_right_context_showed": false,
                        "commented": false,
                        "comment_text": null
                    }
                ]
            }

+ Response 200 (application/json)

    + Body
    
            {
                "accepted_count": 1
            }

# Data structures
## Task type (object)
    + type_id (number) - Идентификатор типа. Целое положительное число
    + name (string) - Название задачи.
    + complexity (number) - Сложность 0 to N задач такого тип

## Task (object)
    +  id (number) - Идентификатор задачи
    +  lcontext (string) - Левый контекст
    +  rcontext (string) - Правый контекст
    +  has_instruction (boolean) - Флаг наличия инструкции
    +  choices (array(object)) - Варианты ответа. Map int => string
    
## Ready task (object)
    + id (number) - Идентификатор задачи. Положительное целое число
    + answer (number) - Номер ответа. -1 если задача пропущена 99, если ответ "другую"
    + before_time (number) - Количество секунд с момента показа задания до ответа пользователя
    + lcontext_showed (boolean) - Был ли показан левый контекст
    + rcontext_showed (boolean) - Был ли показан правый контекст
    + commented (boolean) - Оставил ли пользователь комментарий к заданию
    + comment_test (string) - Текст комментария
