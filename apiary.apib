FORMAT: 1A
HOST: http://opencorpora.org/

# OpenCorpora

Описание методов API OpenCorpora для мобильного приложения

## Авторизация [POST /api.php?action=login]

Возвращает временный токен для дальнейшей аутентификации пользователя.

Адрес и поведение скопированы из существующей версии API.  Наверное, для
единообразия стоило бы сделать авторизацию по образу и подобию других методов.

+ Attributes
    + login JIoJkHoHoJka (string, required) - Логин пользователя
    + password qwerty (string, required) - Пароль пользователя

+ Response 200 (application/json)
    + Body

            {
                "api_version": "0.3",
                "answer": {
                  "token": 458466977
                },
                "error": null
            }

+ Response 401 (application/json)
    + Body

            {
                "api_version": "0.3",
                "answer": null,
                "error": "Неверный логин или пароль"
            }

## Получение типов задач [GET /api/get_types.php?uid={uid}&token={token}]

Возвращает доступные типы задач

+ Parameters
    + uid: `123` (string, required) - Идентификатор пользователя
    + token: `123456789` (string, required) - Секретный токен

+ Response 200 (application/json)
    + Поля ответа:
        + `items: array[TaskType]` — Массив типов задач
    + Тип задач — `TaskType`:
        + `type_id: number` — Идентификатор типа
        + `name: string` — Название задачи
        + `complexity: number` — Сложность

    + Body

            {
                 "items": [
                    {
                        "type_id": 1,
                        "name": "Прилагательное, мн.ч.: именительный / винительный",
                         "complexity": 10
                    },
                    {
                        "type_id": 2,
                        "name": "Существительное, ед. ч.: родительный / дательный / предложный",
                        "complexity": 5
                    }
                ]
            }

+ Response 401 (text/plain)

        Токен аутентификации не опознан

## Получение задач [GET /api/get_tasks.php?uid={uid}&token={token}&type={type}&count={count}]

Возвращает задачи для выполнения. В случае, когда запрашивается слишком много
задач, возвращает какое-то их максимальное число.

+ Parameters
    + uid (required, string, `2133`) ... Идентификатор пользователя
    + token (required, string, `12343534`) ... Токен аутентификации
    + type (required, number, `1`) ... Тип задач
    + count (optional, number, `10`) ... Количество запрашиваевых задач

+ Response 200 (application/json)
    + Поля ответа:
        + `items: array[Task]` — Массив задач
    + Задача — `Task`:
        +  `id: number` — Идентификатор задачи
        +  `lcontext: string` — Левый контекст
        +  `rcontext: string` — Правый контекст
        +  `has_instruction: boolean` — Флаг наличия инструкции
        +  `choices: array[number -> string]` — варианты ответа

    + Body

            {
                "items": [
                    {
                        "id": 123,
                        "target": "одной",
                        "left_context": "Недопустимо , чтобы",
                        "right_context": "из подсистем являлась сама",
                        "has_instruction": true,
                        "choices": [
                            {
                                "1": "родительный"
                            },
                            {
                                "2": "дательный"
                            },
                            {
                                "3": "винительный"
                            },
                            {
                                "4": "предложный"
                            }
                        ]
                    }
                ]
            }

+ Response 400 (text/plain)

        Указан несуществующий тип задачи или некорректное число задач

+ Response 401 (text/plain)

        Токен аутентификации не опознан

## Актуализация задач [/api/post_actual.php/?uid={uid}&token={token}]
### Актуализация [POST]
Актуализирует задачи в базе мобильного приложения с базой сервиса
+ Parameters 
    + uid (required, string, `123456`) ... Идентификатор пользователя
    + token (required, string, `12343534`) ... Токен авторизации

+ Request (application/json)
    + Body

            {
                "items": [
                    123,
                    145,
                    3456
                ]
            }

+ Response 200 (application/json)
    + Body 
        
            { 
                "items": [123]
            }


## Отправка задач [/api/post_tasks.php/?uid={uid}&token={token}]

### Отправка [POST]
Отправляет выполненные задачи
+ Parameters 
    + uid (required, string, `123456`) ... Идентификатор пользователя
    + token (required, string, `12343534`) ... Токен авторизации

+ Request (application/json)
    + Body
    
            {
                "items": [
                    {
                        "id": 1,
                        "answer": -1,
                        "seconds_before_answer": 23,
                        "is_left_context_showed": true,
                        "is_right_context_showed": false,
                        "commented": true,
                        "comment_text": "very difficult question"
                    },
                    {
                        "id": 2,
                        "answer": 2,
                        "seconds_before_answer": 2,
                        "is_left_context_showed": false,
                        "is_right_context_showed": false,
                        "commented": false,
                        "comment_text": null
                    }
                ]
            }

+ Response 200 (application/json)
    + Body

            {
                "accepted_count": 1
            }

# Data structures

## Task types
    + items (array[Task type], required) - Массив типов задач

## Task type (object)
    + type_id (number, required) - Идентификатор типа, целое положительное число
    + name (string, required) - Название задачи
    + complexity (number, required) - Сложность 0 to N задач такого типа

## Task (object)
    +  id (number) - Идентификатор задачи
    +  lcontext (string) - Левый контекст
    +  rcontext (string) - Правый контекст
    +  has_instruction (boolean) - Флаг наличия инструкции
    +  choices (array(object)) - Варианты ответа. Map int => string

## Ready task (object)
    + id (number) - Идентификатор задачи. Положительное целое число
    + answer (number) - Номер ответа. -1 если задача пропущена 99, если ответ "другую"
    + before_time (number) - Количество секунд с момента показа задания до ответа пользователя
    + lcontext_showed (boolean) - Был ли показан левый контекст
    + rcontext_showed (boolean) - Был ли показан правый контекст
    + commented (boolean) - Оставил ли пользователь комментарий к заданию
    + comment_test (string) - Текст комментария